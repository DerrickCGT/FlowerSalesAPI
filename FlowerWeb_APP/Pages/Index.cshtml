@page
@model IndexModel
@{
    ViewData["Title"] = Model.SearchType != null ? "Search results" : "Home page";
}

<div class="text-center">
    <h1 class="display-4">Welcome to Flower Sales</h1>    
</div>

@* <ul id="flowerList"></ul> *@

<div class="container">
    <div class="row" id="flowerList">
        <!-- Cards will be injected here by the JavaScript -->
    </div>
</div>

@section Scripts{
    <script>
        //Optional: json async with multi-thread
        document.addEventListener('DOMContentLoaded', function () { 
            const params = new URLSearchParams(window.location.search);
            const searchTerm = params.get('searchTerm');
            const searchType = params.get('searchType')

            let baseUrl = `https://localhost:7059/products`;

            let url = baseUrl;
            if (searchType && searchTerm) {
                url += `?${searchType}=${encodeURIComponent(searchTerm)}`;
            } 

            let flowerList = document.getElementById("flowerList")            

            const showFlower = (products) => {
                flowerList.innerHTML = ''; // Clear the list

                products.forEach(product => {
                    // Create a card for each product
                    let colDiv = document.createElement("div");
                    colDiv.className = 'col-lg-4 col-md-6 mb-4'; 

                    colDiv.innerHTML = `
                                     <div class="card h-100 text-center">
                                        <div class="card-header">
                                            <img src="#" class="card-img-top" alt="${product.name}">
                                        </div>
                                        <div class="card-body card-hover-effect">
                                            <h5 class="card-title">${product.name}</h5>
                                            <p class="card-text">${product.categoryName}</p>
                                            <p class="card-text">\$${product.price}</p>
                                        </div>
                                    </div>
                                    `;

                    flowerList.appendChild(colDiv);
                });
            }
            //Should applied hardcoded enumerate headers 
            fetch(url, {
                headers: {
                    "X-API-version": "1"
                }
            })
            .then(response => response.json())
            .then(data => showFlower(data))
            .catch(ex => {
                alert("error" + ex);
                console.error(ex);
            });
        })
     
        
        // Simple method to display all product
        /*
        const showFlower = (products) => {

            flowerList.innerHTML = '';

            products.forEach(product => {
                let li = document.createElement("li");
                let text = `${product.name}:(\$${product.price})`;
                li.appendChild(document.createTextNode(text));
                flowerList.appendChild(li);
            });
        }
        */

        // Apply sync to load data before display initial page
        /*
        document.addEventListener("DOMContentLoaded", async function () {
            let url = "https://localhost:7059/products";

            let flowerList = document.getElementById("flowerList");

            try {
                const response = await fetch(url);
                if (!response.ok) {
                    throw new Error("Network response was not ok.");
                }
                const data = await response.json();
                showFlower(data);
            } catch (ex) {
                console.error(ex);
                alert("An error occurred while fetching data.");
            }
                    
        })
        */
        

        // function showFlower(products) {
        //     produts.forEach(product => {
        //         let li = document.createElement("li");
        //         let text = `${products.name}:(\$${product.price})`;
        //         li.appendChild(document.createTextNode(text));
        //         flowerList.appendChild(li);
        //     });
        // };

        //<button id="postButton">Create Product</button>


    //    document.addEventListener('DOMContentLoaded', function () {
    //    // Find the button element by its id
    //    const postButton = document.getElementById('postButton');

    //    postButton.addEventListener('click', function () {
    //        // Define the JSON data to send in the POST request
    //        const postData = {
    //            name: "abcd",
    //            storeLocation: "new location",
    //            postcode: 0,
    //            price: 0,
    //            isAvailable: true,
    //            categoryName: "Additional"
    //        };

            //// Make a POST request when the button is clicked
            //fetch('https://localhost:7059/products', {
            //    method: 'POST',
            //    headers: {
            //        'Accept': '*/*',
            //        'Content-Type': 'application/json'
            //    },
            //    body: JSON.stringify(postData)
            //})
    //        .then(response => {
    //            if (response.ok) {
    //                // Request was successful, handle the response here
    //                alert('Product created successfully.');
    //            } else {
    //                // Request failed, handle the error here
    //                alert('Failed to create the product.');
    //            }
    //        })
    //        .catch(error => {
    //            console.error('Error:', error);
    //            alert('An error occurred while creating the product.');
    //        });
    //    });
    //});

    </script>
}
